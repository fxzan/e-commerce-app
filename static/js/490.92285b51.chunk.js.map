{"version":3,"file":"static/js/490.92285b51.chunk.js","mappings":"oNA+EA,UAzEA,WACE,MAA4BA,EAAAA,UAAe,GAA3C,eAAOC,EAAP,KAAgBC,EAAhB,KACMC,EAAUH,EAAAA,WAAiBI,EAAAA,GAC3BC,EAAWL,EAAAA,WAAiBM,EAAAA,GAC5BC,EAAQP,EAAAA,SACRQ,EAAWR,EAAAA,SACXS,GAAUC,EAAAA,EAAAA,MAND,wCAYf,WAA6BC,GAA7B,oFACEA,EAAMC,iBAGJC,EADEZ,EAEA,oHAGA,wGARN,kBAW2Ba,MAAMD,EAAK,CAChCE,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACnBX,MAAOA,EAAMY,QAAQC,MACrBZ,SAAUA,EAASW,QAAQC,MAC3BC,mBAAmB,IAErBC,QAAS,CACP,eAAgB,sBAnBxB,WAWUC,EAXV,QAuBkBC,GAvBlB,iCAwByBD,EAASE,OAxBlC,aAwBYC,EAxBZ,OAyBMC,QAAQC,IAAIF,EAAKG,MAAMC,MACjB,IAAIC,MAAJ,gBAAmBL,EAAKG,MAAMC,KAA9B,aAAuCJ,EAAKG,MAAMG,UA1B9D,yBA4ByBT,EAASE,OA5BlC,QA4BYC,EA5BZ,OA6BMC,QAAQC,IAAIF,GACZvB,EAAQ8B,MAAMP,EAAKQ,SACnBzB,EAAQ0B,QAAQ,yBA/BtB,0DAkCI9B,EAAS+B,UAAT,MAlCJ,2DAZe,sBAkDf,OACE,+BACE,iBAAKC,UAAU,iBAAf,WACE,mCACA,iBAAKA,UAAU,iBAAf,WACE,kBAAMC,SAvDC,4CAuDP,WACE,kBAAOC,QAAQ,QAAf,sBACA,kBAAOC,GAAG,QAAQC,KAAK,QAAQC,IAAKnC,EAAOoC,UAAQ,KACnD,kBAAOJ,QAAQ,QAAf,wBACA,kBAAOC,GAAG,QAAQC,KAAK,WAAWC,IAAKlC,EAAUmC,UAAQ,KACzD,mBAAQN,UAAU,WAAWI,KAAK,SAAlC,SACGxC,EAAU,UAAY,gBAG3B,gBAAKoC,UAAW,aAAcO,QAxDtC,WACE1C,GAAS,SAAC2C,GAAD,OAAgBA,MAuDnB,SACG5C,EAAU,uBAAyB","sources":["pages/Login.js"],"sourcesContent":["import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport InfoModalContext from \"../store/infoModal-context\";\r\nimport AuthContext from \"../store/auth-context\";\r\n\r\nfunction Login() {\r\n  const [isLogin, setLogin] = React.useState(true);\r\n  const authCtx = React.useContext(AuthContext);\r\n  const modalCtx = React.useContext(InfoModalContext);\r\n  const email = React.useRef();\r\n  const password = React.useRef();\r\n  const history = useHistory();\r\n\r\n  function loginToggle() {\r\n    setLogin((prevLogin) => !prevLogin);\r\n  }\r\n\r\n  async function submitHandler(event) {\r\n    event.preventDefault();\r\n    let url;\r\n    if (isLogin)\r\n      url =\r\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAoQtbu7HMnZAG_5er1DnA-HYEj-NWGU4s\";\r\n    else\r\n      url =\r\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAoQtbu7HMnZAG_5er1DnA-HYEj-NWGU4s\";\r\n\r\n    try {\r\n      const response = await fetch(url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          email: email.current.value,\r\n          password: password.current.value,\r\n          returnSecureToken: true,\r\n        }),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const data = await response.json();\r\n        console.log(data.error.code);\r\n        throw new Error(` Code ${data.error.code}: ${data.error.message}`);\r\n      } else {\r\n        const data = await response.json();\r\n        console.log(data);\r\n        authCtx.login(data.idToken);\r\n        history.replace(\"/e-commerce-app/store\");\r\n      }\r\n    } catch (error) {\r\n      modalCtx.showModal(error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container-form\">\r\n        <h2>Login</h2>\r\n        <div className=\"form-container\">\r\n          <form onSubmit={submitHandler}>\r\n            <label htmlFor=\"email\">E-Mail:</label>\r\n            <input id=\"email\" type=\"email\" ref={email} required />\r\n            <label htmlFor=\"phone\">Password:</label>\r\n            <input id=\"phone\" type=\"password\" ref={password} required />\r\n            <button className=\"btn-pink\" type=\"submit\">\r\n              {isLogin ? \"Sign in\" : \"Sign up\"}\r\n            </button>\r\n          </form>\r\n          <div className={\"login-mode\"} onClick={loginToggle}>\r\n            {isLogin ? \"Create a new account\" : \"Login to an existing account\"}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"names":["React","isLogin","setLogin","authCtx","AuthContext","modalCtx","InfoModalContext","email","password","history","useHistory","event","preventDefault","url","fetch","method","body","JSON","stringify","current","value","returnSecureToken","headers","response","ok","json","data","console","log","error","code","Error","message","login","idToken","replace","showModal","className","onSubmit","htmlFor","id","type","ref","required","onClick","prevLogin"],"sourceRoot":""}